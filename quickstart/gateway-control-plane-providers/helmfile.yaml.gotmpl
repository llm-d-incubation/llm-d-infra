environments:
  istio:
    values:
      - istio.yaml
  kgateway:
    values:
      - kgateway.yaml
  gke:
    values:
      - gke.yaml

  # Default pointer to istio for now
  default:
    values:
      - istio.yaml

---
repositories:
  - name: llm-d-modelservice
    url: https://llm-d-incubation.github.io/llm-d-modelservice/
  - name: llm-d-infra
    url: https://llm-d-incubation.github.io/llm-d-infra/

{{- $p := .Values.provider | default "istio" }}

releases:
{{- if eq $p "istio" }}
  - name: istio-base
    chart: oci://gcr.io/istio-testing/charts/base
    version: {{ .Values.version }}
    namespace: istio-system
    installed: {{ eq .Values.provider "istio" }}
    labels:
      type: gateway-provider
      kind: gateway-crds

  - name: istiod
    chart: oci://gcr.io/istio-testing/charts/istiod
    version: {{ .Values.version }}
    namespace: istio-system
    installed: {{ eq .Values.provider "istio" }}
    needs:
      - istio-system/istio-base
    values:
      - meshConfig:
          defaultConfig:
            proxyMetadata:
              SUPPORT_GATEWAY_API_INFERENCE_EXTENSION: true
        pilot:
          env:
            SUPPORT_GATEWAY_API_INFERENCE_EXTENSION: true
        tag: {{ .Values.version }}
        hub: "gcr.io/istio-testing"
    labels:
      type: gateway-provider
      kind: gateway-control-plane
{{- end }}

{{- if eq $p "kgateway" }}
  - name: kgateway-crds
    chart: oci://cr.kgateway.dev/kgateway-dev/charts/kgateway-crds
    namespace: kgateway-system
    version: {{ .Values.version }}
    installed: {{ eq .Values.provider "kgateway" }}
    labels:
      type: gateway-provider
      kind: gateway-crds

  - name: kgateway
    chart: oci://cr.kgateway.dev/kgateway-dev/charts/kgateway
    version: {{ .Values.version }}
    namespace: kgateway-system
    installed: {{ eq .Values.provider "kgateway" }}
    needs:
      - kgateway-system/kgateway-crds
    values:
      - inferenceExtension:
          enabled: true
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        podSecurityContext:
          seccompProfile:
            type: "RuntimeDefault"
          runAsNonRoot: true
    labels:
      type: gateway-provider
      kind: gateway-control-plane
{{- end }}
