set dotenv-load
set dotenv-required

NAMESPACE := "$NAMESPACE"
HF_TOKEN := "$HF_TOKEN"
GH_TOKEN := "$GH_TOKEN"

MODEL := "deepseek-ai/DeepSeek-R1-0528"

KN := "kubectl -n $NAMESPACE"

# Print table of nodes on Coreweave. Quiet recipe since the command is messy
@cks-nodes:
  kubectl get nodes -o=custom-columns="NAME:metadata.name,IP:status.addresses[?(@.type=='InternalIP')].address,TYPE:metadata.labels['node\.coreweave\.cloud\/type'],LINK:metadata.labels['ethernet\.coreweave\.cloud/speed'],READY:status.conditions[?(@.type=='Ready')].status,CORDON:spec.unschedulable,TAINT:spec.taints[?(@.key=='qos.coreweave.cloud/interruptable')].effect,RELIABILITY:metadata.labels['node\.coreweave\.cloud\/reliability'],LG:metadata.labels['ib\.coreweave\.cloud\/leafgroup'],VERSION:metadata.labels['node\.coreweave\.cloud\/version'],IB:metadata.labels['ib\.coreweave\.cloud\/speed'],STATE:metadata.labels['node\.coreweave\.cloud\/state'],RESERVED:metadata.labels['node\.coreweave\.cloud\/reserved']"

create-secrets:
  kubectl create secret generic hf-secret --from-literal=HF_TOKEN={{HF_TOKEN}} -n {{NAMESPACE}} \
  && kubectl create secret generic gh-token-secret --from-literal=GH_TOKEN={{GH_TOKEN}} -n {{NAMESPACE}}

start-bench:
    {{KN}} apply -f benchmark-interactive-pod.yaml
  
exec-bench:
  mkdir -p ./.tmp \
  && echo "MODEL := \"{{MODEL}}\"" > .tmp/Justfile.remote.tmp \
  && sed -e 's#__BASE_URL__#\"http://infra-wide-ep-inference-gateway-istio.llm-d-wide-ep.svc.cluster.local\"#g' Justfile.remote >> .tmp/Justfile.remote.tmp \
  && kubectl cp .tmp/Justfile.remote.tmp {{NAMESPACE}}/benchmark-interactive:/app/Justfile \
  && kubectl cp  ./run.sh {{NAMESPACE}}/benchmark-interactive:/app/run.sh \
  && {{KN}} exec -it benchmark-interactive -- /bin/bash

run-bench:
  mkdir -p ./.tmp \
  && echo $(date +%m%d%H%M) > .tmp/TIMESTAMP \
  && echo "MODEL := \"{{MODEL}}\"" > .tmp/Justfile.remote \
  && sed -e 's#__BASE_URL__#\"http://infra-wide-ep-inference-gateway-istio.llm-d-wide-ep.svc.cluster.local\"#g' Justfile.remote >> .tmp/Justfile.remote \
  && kubectl cp .tmp/TIMESTAMP {{NAMESPACE}}/benchmark-interactive:/app/TIMESTAMP \
  && kubectl cp .tmp/Justfile.remote {{NAMESPACE}}/benchmark-interactive:/app/Justfile \
  && kubectl cp  ./run.sh {{NAMESPACE}}/benchmark-interactive:/app/run.sh \
  && kubectl cp  ./ms-wide-ep/values.yaml {{NAMESPACE}}/benchmark-interactive:/app/values.yaml \
  && {{KN}} exec benchmark-interactive -- bash /app/run.sh

cp-results:
  kubectl cp benchmark-interactive:/app/results/$(cat ./.tmp/TIMESTAMP) \
    results/$(cat ./.tmp/TIMESTAMP)

start:
   helmfile --selector managedBy=helmfile apply helmfile.yaml
stop:
   helmfile --selector managedBy=helmfile destroy
restart:
  just stop && just start

print-results DIR STR:
  grep "{{STR}}" {{DIR}}/*.log \
    | awk -F'[/_]' '{print $3, $0}' \
    | sort -n \
    | cut -d' ' -f2-

print-throughput DIR:
  just print-results {{DIR}} "Output token throughput"

print-tpot DIR:
  just print-results {{DIR}} "Median TPOT"
