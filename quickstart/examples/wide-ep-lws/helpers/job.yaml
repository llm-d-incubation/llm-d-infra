apiVersion: batch/v1
kind: Job
metadata:
  name: hf-model-download
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: downloader
          # Small Python image; installs only what's needed at runtime
          image: python:3.11-alpine
          imagePullPolicy: IfNotPresent
          env:
            # >>> Set your target model here (examples: "deepseek-ai/DeepSeek-R1-0528", "Qwen/Qwen1.5-MoE-A2.7B-Chat")
            - name: MODEL_ID
              value: "Qwen/Qwen3-235B-A22B-Thinking-2507-FP8"
            # Optional: pin a specific commit tag, branch, or "main"
            - name: MODEL_REVISION
              value: ""          # leave empty for latest
            # Use hf-transfer for faster, resilient downloads
            - name: HF_HUB_ENABLE_HF_TRANSFER
              value: "1"
            # Make sure everything lands on the PVC
            - name: TRANSFORMERS_CACHE
              value: "/models"
            # Wire HF token from your Secret
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: llm-d-hf-token
                  key: HF_TOKEN
          volumeMounts:
            - name: models
              mountPath: /models
          # Install minimal deps and download via huggingface_hub
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -euo pipefail
              echo "Installing minimal dependencies..."
              pip install --no-cache-dir --upgrade pip >/dev/null
              pip install --no-cache-dir "huggingface_hub[cli]>=0.24.0" "hf-transfer>=0.1.7" >/dev/null

              python - <<'PY'
              import os, sys
              from huggingface_hub import snapshot_download

              model_id = os.environ.get("MODEL_ID")
              if not model_id:
                  print("ERROR: MODEL_ID is not set", file=sys.stderr)
                  sys.exit(2)

              revision = os.environ.get("MODEL_REVISION") or None
              target_dir = os.path.join("/models", model_id.replace("/", "__"))

              # Ensure we fully materialize files under the PVC
              local_dir = snapshot_download(
                  repo_id=model_id,
                  revision=revision,
                  token=os.environ.get("HF_TOKEN"),
                  local_dir=target_dir,
                  local_dir_use_symlinks=False,
                  ignore_patterns=["*.safetensors.index.json", "*.h5"],  # tweak as desired
              )

              print(f"Downloaded {model_id} to {local_dir}")
              PY

              echo "Listing contents:"
              find /models -maxdepth 3 -type f | head -n 200 || true
      volumes:
        - name: models
          persistentVolumeClaim:
            claimName: hf-model-pvc
